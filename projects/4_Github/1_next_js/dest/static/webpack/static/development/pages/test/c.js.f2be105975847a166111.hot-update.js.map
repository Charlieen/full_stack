{"version":3,"file":"static/webpack/static/development/pages/test/c.js.f2be105975847a166111.hot-update.js","sources":["webpack:///./pages/test/c.js"],"sourcesContent":["import React,{useState ,useReducer,useContext,useLayoutEffect,useEffect ,useRef, memo} from 'react'\n\nimport MyContext from '../../lib/my-context'\n\nfunction countReducer(state,action){\n    switch (action.type) {\n        case 'add':\n            return state+1\n            \n        case 'minus':\n            return state-1\n    \n        default:\n            return state;\n    }\n}\n\nfunction MyCountFunc(){\n    const [count,dispatchCount]= useReducer(countReducer,0)\n    const [name,setName] = useState('charlie')\n// 每一次 MyCountFunc 组件 刷新，该config 都会重新生成新的对象，\n    const config={\n        text:`count is ${count}`,\n        color:count>3? 'red':'blue',\n    }\n\n    return (\n        <div>\n            <input  value={name} onChange={(e)=>setName(e.target.value)}/>\n            <Child\n              config={config}\n              onButtonClick={()=>dispatchCount({type:'add'})}\n            />\n        </div>\n    )\n}\n\nconst Child = memo( function Child({onButtonClick,config}) {\n    console.log('child render')\n    return (\n        <button onClick={onButtonClick} style={{ color:config.color}}>\n        {config.text}\n        </button>\n    )\n})\nexport default MyCountFunc"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;;;A","sourceRoot":""}